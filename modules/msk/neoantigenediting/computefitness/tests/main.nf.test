nextflow_process {

    name "Test Process NEOANTIGENEDITING_COMPUTEFITNESS"
    script "../main.nf"
    process "NEOANTIGENEDITING_COMPUTEFITNESS"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "modules_msk"
    tag "neoantigenediting"
    tag "neoantigenediting/computefitness"

    test("neoantigenediting_computefitness - json") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map,
                    file(params.test_data_mskcc['neoantigen']['patient_data'], checkIfExists: true),
                    file(params.test_data_mskcc['neoantigen']['iedb_alignments'], checkIfExists: true)
                    ]
                input[0] = [
                    [ id:'test', single_end:false ], // meta map,
                    file(params.test_data_mskcc['neoantigen']['patient_data'], checkIfExists: true),
                    file(params.test_data_mskcc['neoantigen']['iedb_alignments'], checkIfExists: true)
                    ]
                

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.versions,file(process.out.annotated_output[0][1]).name).match() }

            )
        }

    }

    test("neoantigenediting_computefitness - json - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map,
                    file('patient_data'),
                    file('alignment_file')
                    ]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.versions,process.out).match() }

            )
        }

    }


}
