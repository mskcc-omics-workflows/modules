
nextflow_process {

    name "Test Process MUTECT2"
    script "../main.nf"
    process "MUTECT2"

    tag "modules"
    tag "modules_msk"
    tag "mutect2"


    test("mutect2 - test - vcf") {

        when {
            process {
                """
                
                input[0] = [
                    [case_id: 'tumor',control_id:  'normal'],
                    file(params.test_data['sarscov2']['illumina']['test_single_end_sorted_bam'], checkIfExists: true),
                    file(params.test_data['sarscov2']['illumina']['test_paired_end_sorted_bam'], checkIfExists: true),
                    file(params.test_data['sarscov2']['illumina']['test_single_end_sorted_bam_bai'], checkIfExists: true),
                    file(params.test_data['sarscov2']['illumina']['test_paired_end_sorted_bam_bai'], checkIfExists: true)
                ]

                input[1] = [
                    file(params.test_data['sarscov2']['genome']['test_bed'], checkIfExists: true),
                    file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true),
                    file(params.test_data['sarscov2']['genome']['genome_fasta_fai'], checkIfExists: true),
                    file(params.test_data['sarscov2']['genome']['genome_dict'], checkIfExists: true)
                ]


                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }


    test("mutect2 - vcf - stub") {

        options "-stub"

        when {
            process {
                """
                
                input[0] = [
                    [case_id: 'tumor',control_id:  'normal'],
                    file(params.test_data['sarscov2']['illumina']['test_single_end_sorted_bam'], checkIfExists: true),
                    file(params.test_data['sarscov2']['illumina']['test_paired_end_sorted_bam'], checkIfExists: true),
                    file(params.test_data['sarscov2']['illumina']['test_single_end_sorted_bam_bai'], checkIfExists: true),
                    file(params.test_data['sarscov2']['illumina']['test_paired_end_sorted_bam_bai'], checkIfExists: true)
                ]

                input[1] = [
                    file(params.test_data['sarscov2']['genome']['test_bed'], checkIfExists: true),
                    file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true),
                    file(params.test_data['sarscov2']['genome']['genome_fasta_fai'], checkIfExists: true),
                    file(params.test_data['sarscov2']['genome']['genome_dict'], checkIfExists: true)
                ]
                
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
