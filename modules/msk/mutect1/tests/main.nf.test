nextflow_process {

    name "Test Process MUTECT1"
    script "../main.nf"
    process "MUTECT1"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "modules_msk"
    tag "mutect1"


    test("normal_tumor") {

        when {
            process {
                """


                input[0] = [
                    [case_id: 'tumor',control_id:  'normal'],
                    file(params.test_data['sarscov2']['illumina']['test_single_end_sorted_bam'], checkIfExists: true),
                    file(params.test_data['sarscov2']['illumina']['test_paired_end_sorted_bam'], checkIfExists: true),
                    file(params.test_data['sarscov2']['illumina']['test_single_end_sorted_bam_bai'], checkIfExists: true),
                    file(params.test_data['sarscov2']['illumina']['test_paired_end_sorted_bam_bai'], checkIfExists: true)
                    ]

                input[1] = [
                    file(params.test_data['sarscov2']['genome']['test_bed'], checkIfExists: true),
                    file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true),
                    file(params.test_data['sarscov2']['genome']['genome_fasta_fai'], checkIfExists: true),
                    file(params.test_data['sarscov2']['genome']['genome_dict'], checkIfExists: true)
                    ]
                """
            }
        }



        then {
            assertAll(
                { assert process.success }
            )
        }

    }


    test("normal_tumor_stub") {

        options "-stub"

        when {
            process {
                """


                input[0] = [
                    [case_id: 'tumor',control_id:  'normal'],
                    file(params.test_data['sarscov2']['illumina']['test_single_end_sorted_bam'], checkIfExists: true),
                    file(params.test_data['sarscov2']['illumina']['test_paired_end_sorted_bam'], checkIfExists: true),
                    file(params.test_data['sarscov2']['illumina']['test_single_end_sorted_bam_bai'], checkIfExists: true),
                    file(params.test_data['sarscov2']['illumina']['test_paired_end_sorted_bam_bai'], checkIfExists: true)
                    ]

                input[1] = [
                    file(params.test_data['sarscov2']['genome']['test_bed'], checkIfExists: true),
                    file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true),
                    file(params.test_data['sarscov2']['genome']['genome_fasta_fai'], checkIfExists: true),
                    file(params.test_data['sarscov2']['genome']['genome_dict'], checkIfExists: true)
                    ]
                """
            }
        }



        then {
            assertAll(
                { assert process.success }
            )
        }

    }

}
